plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group
fabric_api = project.fabric_api + "+" + project.minecraft_version

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
	// Fabric
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Libraries
	include(implementation("com.github.Moonlight-MC:JNLua:$jnlua"))
	include(implementation("org.java-websocket:Java-WebSocket:$websocket"))

	// Mods
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api"
	modImplementation "com.terraformersmc:modmenu:$modmenu"
}

processResources {
	Map<String, Object> properties = new HashMap<>()

	properties.put("version", version)
	properties.put("java_version", sourceCompatibility)
	properties.put("minecraft_version", minecraft_version)
	properties.put("loader_version", loader_version)
	properties.put("fabric_api", fabric_api)

	properties.forEach((k, v) -> inputs.property(k, v.toString()))
	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = Integer.parseInt(sourceCompatibility.toString())
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_$archivesBaseName"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
