{
  "figura": "Figura",


  "figura.toast.reload": "Avatar reloaded!",
  "figura.toast.panic_enabled": "Panic mode enabled!",
  "figura.toast.panic_disabled": "Panic mode disabled!",


  "figura.trust.group.blocked": "Blocked",
  "figura.trust.group.untrusted": "Untrusted",
  "figura.trust.group.trusted": "Trusted",
  "figura.trust.group.friend": "Friend",
  "figura.trust.group.local": "Local",

  "figura.trust.infinity": "INFINITY",
  "figura.trust.enabled": "Enabled",
  "figura.trust.disabled": "Disabled",

  "figura.trust.init_inst": "Init Instructions",
  "figura.trust.tick_inst": "Tick Instructions",
  "figura.trust.render_inst": "Render Instructions",
  "figura.trust.max_mem": "Max Script Memory",
  "figura.trust.complexity": "Max Complexity",
  "figura.trust.particles": "Max Particles",
  "figura.trust.sounds": "Max Sounds",
  "figura.trust.bb_animations": "Animation Complexity",
  "figura.trust.vanilla_model_edit": "Vanilla Model Change",
  "figura.trust.nameplate_edit": "Nameplate Change",
  "figura.trust.offscreen_rendering": "Render Offscreen",
  "figura.trust.custom_render_layer": "Custom Render Layers",
  "figura.trust.custom_sounds": "Custom Sounds",


  "figura.gui.on": "ON",
  "figura.gui.off": "OFF",
  "figura.gui.search": "Search...",
  "figura.gui.name": "Name",
  "figura.gui.author": "Author",
  "figura.gui.size": "Size (kb)",
  "figura.gui.complexity": "Complexity",
  "figura.gui.back": "Back",
  "figura.gui.cancel": "Cancel",
  "figura.gui.expand": "Expand",
  "figura.gui.minimise": "Minimise",
  "figura.gui.panic.1": "Panic mode active! Figura features are disabled!",
  "figura.gui.panic.2": "toggle panic mode with [%s] key",
  "figura.gui.help.tooltip": "Help",


  "figura.gui.context.set_trust": "Set Trust",
  "figura.gui.context.reload": "Reload Avatar",
  "figura.gui.context.copy_path": "Copy Path",
  "figura.gui.context.open_folder": "Open Folder",


  "figura.gui.panels.title.profile": "Profile",
  "figura.gui.panels.title.browser": "Browser",
  "figura.gui.panels.title.wardrobe": "Wardrobe",
  "figura.gui.panels.title.trust": "Trust",
  "figura.gui.panels.title.settings": "Settings",

  "figura.gui.panels.title.sound": "Avatar Sounds",
  "figura.gui.panels.title.keybind": "Avatar Keybinds",
  "figura.gui.panels.title.avatar": "Avatar Preview",


  "figura.gui.wardrobe.expand_wardrobe.tooltip": "Expand wardrobe list",
  "figura.gui.wardrobe.minimize_wardrobe.tooltip": "Minimize wardrobe list",
  "figura.gui.wardrobe.upload.tooltip": "Upload avatar to Figura server",
  "figura.gui.wardrobe.reload.tooltip": "Reload avatar",
  "figura.gui.wardrobe.delete.tooltip": "Delete avatar from Figura server",
  "figura.gui.wardrobe.sound.tooltip": "Avatar Sounds",
  "figura.gui.wardrobe.keybind.tooltip": "Avatar Keybinds",


  "figura.gui.trust.reset": "Reset All",
  "figura.gui.trust.expand_trust.tooltip": "Expand advanced trust menu",
  "figura.gui.trust.minimize_trust.tooltip": "Minimize advanced trust menu",


  "figura.gui.status.size": "Size",
  "figura.gui.status.size.0": "none",
  "figura.gui.status.size.1": "100kb+",
  "figura.gui.status.size.2": "75kb+",
  "figura.gui.status.size.3": "ok",

  "figura.gui.status.texture": "Texture",
  "figura.gui.status.texture.0": "none",
  "figura.gui.status.texture.3": "ok",

  "figura.gui.status.script": "Script",
  "figura.gui.status.script.0": "none",
  "figura.gui.status.script.1": "error",
  "figura.gui.status.script.3": "ok",

  "figura.gui.status.backend": "Backend",
  "figura.gui.status.backend.reason": "Reason",
  "figura.gui.status.backend.1": "disconnected",
  "figura.gui.status.backend.2": "connecting",
  "figura.gui.status.backend.3": "connected",


  "figura.config.input.any": "Text...",
  "figura.config.input.int": "Integer...",
  "figura.config.input.float": "Number...",
  "figura.config.input.hex_color": "Color...",
  "figura.config.input.folder_path": "Path...",


  "figura.config.nameplate": "Nameplate",
  "figura.config.nameplate.tooltip": "Nameplate settings",

  "figura.config.self_nameplate": "Enable Self Nameplate",
  "figura.config.self_nameplate.tooltip": "Toggles the rendering of your own nameplate",

  "figura.config.preview_nameplate": "Nameplate in GUI",
  "figura.config.preview_nameplate.tooltip": "Toggles the rendering of nameplates in the GUI",

  "figura.config.chat_nameplate": "Chat customizations",
  "figura.config.chat_nameplate.tooltip": "Set the level of nameplate customizations on the CHAT",
  "figura.config.entity_nameplate": "Entity customizations",
  "figura.config.entity_nameplate.tooltip": "Set the level of nameplate customizations on the ENTITY",
  "figura.config.list_nameplate": "Tablist customizations",
  "figura.config.list_nameplate.tooltip": "Set the level of nameplate customizations on the TABLIST",
  "figura.config.nameplate_level.1": "None",
  "figura.config.nameplate_level.2": "Script",
  "figura.config.nameplate_level.3": "Script + Badges",

  "figura.config.script": "Script",
  "figura.config.script.tooltip": "Script settings",

  "figura.config.log_location": "Print Output",
  "figura.config.log_location.tooltip": "Location where is shown script prints",
  "figura.config.log_location.1": "Chat",
  "figura.config.log_location.2": "Logger",

  "figura.config.actionwheel": "Action Wheel",
  "figura.config.actionwheel.tooltip": "Action Wheel settings",

  "figura.config.misc": "Misc",
  "figura.config.misc.tooltip": "Unsorted/Unrelated settings",

  "figura.config.button_location": "Menu Button Location",
  "figura.config.button_location.tooltip": "Location of the figura button",
  "figura.config.button_location.1": "Icon",
  "figura.config.button_location.2": "Top Left",
  "figura.config.button_location.3": "Top Right",
  "figura.config.button_location.4": "Bottom Left",
  "figura.config.button_location.5": "Bottom Right",

  "figura.config.easter_eggs": "Enable Easter eggs",
  "figura.config.easter_eggs.tooltip": "Toggles fun and unexpected aspects of Figura (boring!)",

  "figura.config.dev": "Dev",
  "figura.config.dev.tooltip": "Developer/Experimental settings",

  "figura.config.reload_button": "Reload Avatar",
  "figura.config.reload_button.tooltip": "Reloads current equipped avatar on press",

  "figura.config.panic_button": "Panic Button",
  "figura.config.panic_button.tooltip": "Stop the rendering of all avatars",

  "figura.command.run.not_local_error" : "No local avatar equipped!",
  "figura.command.run.no_script_error" : "No active script to run code in!",

  "figura.docs.type": "Type",
  "figura.docs.description": "Description",
  "figura.docs.function": "Function",
  "figura.docs.syntax": "Syntax",
  "figura.docs.returns": "Returns",
  "figura.docs.field": "Field",
  "figura.docs.editable": "Editable",
  "figura.docs.not_editable": "Not Editable",

  "figura.docs.globals.desc": "Documentation for the various things Figura adds to the global lua state.",
  "figura.docs.globals.vectors.desc": "The global instance of VectorsAPI.",
  "figura.docs.globals.vec.desc": "An alias for \"vectors.vec\", since it's used so often.",
  "figura.docs.globals.matrices.desc": "The global instance of MatricesAPI.",
  "figura.docs.globals.events.desc": "The global instance of EventsAPI.",
  "figura.docs.globals.vanilla_model.desc": "The global instance of VanillaModelAPI.",
  "figura.docs.globals.world.desc": "The global instance of WorldAPI.",
  "figura.docs.globals.player.desc": "The global instance of Player, representing the user of the avatar.",
  "figura.docs.globals.particle.desc": "The global instance of ParticleAPI.",
  "figura.docs.globals.sound.desc": "The global instance of SoundAPI.",
  "figura.docs.globals.nameplate.desc": "The global instance of NameplateAPI.",
  "figura.docs.globals.models.desc": "A global instance of ModelPart. This is the root node of all your blockbench models. Each bbmodel file is a child of this part.",
  "figura.docs.globals.require.desc": "The require() function takes the name of one of your scripts, without the .lua extension. If this script has not been already run before, it will run that script. If it has been run before, then it will do nothing. If the name you give isn't any of your scripts, it will error.",
  "figura.docs.globals.print.desc": "A function that writes its arguments to chat. Even though the syntax says only one argument, you can put as many as you want. All of them will print, and they'll be separated by some spaces.",
  "figura.docs.globals.log.desc": "An alias for print().",
  "figura.docs.globals.printTable.desc": "The first argument is either a Table, or it's a Userdata, which refers to any of the added Figura types. Prints the table out to chat, specially formatted. If userdata is passed in, it is automatically converted to a table or string, and displayed. In the case of tables inside of tables, the \"maxDepth\" parameter will be used to determine how far to go. BE CAREFUL WITH RECURSIVE TABLES! If you try to print a table too deeply, then your game may freeze while it calculates everything to print, and you may have to restart your client if you go too crazy with it. Default value for maxDepth is 1.",
  "figura.docs.globals.logTable.desc": "An alias for printTable().",
  "figura.docs.globals.printJson.desc": "Takes a Minecraft json string as an argument, and prints it to the chat formatted.",
  "figura.docs.globals.logJson.desc": "An alias for printJson().",

  "figura.docs.sound.desc": "A global API which is used to play Minecraft sounds. Accessed using the name \"sound\".",
  "figura.docs.sound.play_sound.desc": "Plays the specified sound at the specified position with the given volume and pitch multipliers. Volume in Minecraft refers to how far away people can hear the sound from, not the actual loudness of it. If you don't give values for volume and pitch, the default values are 1.",

  "figura.docs.particle.desc": "A global API which is used for dealing with Minecraft's particles. Can currently only be used to summon a particle. Accessed using the name \"particle\".",
  "figura.docs.particle.add_particle.desc": "Creates a particle with the given name at the specified position, with the given velocity. Some particles have special properties, like the \"dust\" particle. For these particles, the special properties can be put into the \"name\" parameter, the same way as it works for commands.",

  "figura.docs.nameplate.desc": "A global API which is used for customizing your player's nameplate in chat, above your head, and in the tab list.",
  "figura.docs.nameplate.chat.desc": "A customization for your nameplate in the chat.",
  "figura.docs.nameplate.entity.desc": "A customization for your nameplate above your head.",
  "figura.docs.nameplate.list.desc": "A customization for your nameplate in the tab list.",

  "figura.docs.nameplate_customization.desc": "A customization that can be applied to a nameplate.",
  "figura.docs.nameplate_customization.text.desc": "The text to use in this nameplate.",
  "figura.docs.nameplate_customization.position.desc": "The position offset of the nameplate, in world coordinates. Only usable on the ENTITY nameplate.",
  "figura.docs.nameplate_customization.scale.desc": "The scale factor of the nameplate. Only usable on the ENTITY nameplate.",
  "figura.docs.nameplate_customization.visible.desc": "Whether or not the nameplate should be visible. Only usable on the ENTITY nameplate.",

  "figura.docs.world.desc": "A global API dedicated to reading information from the Minecraft world. Accessed using the name \"world\".",
  "figura.docs.world.get_biome.desc": "Gets the Biome located at the given position.",
  "figura.docs.world.get_blockstate.desc": "Gets the BlockState of the block at the given position.",
  "figura.docs.world.get_restone_power.desc": "Gets the redstone power level of the block at the given position.",
  "figura.docs.world.get_strong_redstone_power.desc": "Gets the direct redstone power level of the block at the given position.",
  "figura.docs.world.get_time.desc": "Gets the current game time of the world. If delta is passed in, then it adds delta to the time. The default value of delta is zero.",
  "figura.docs.world.get_time_of_day.desc": "Gets the current day time of the world. If delta is passed in, then it adds delta to the time. The default value of delta is zero.",
  "figura.docs.world.get_moon_phase.desc": "Gets the current moon phase of the world, stored as an integer.",
  "figura.docs.world.get_rain_gradient.desc": "Gets the current rain gradient in the world, interpolated from the previous tick to the current one. The default value of delta is 1, which is the current tick.",
  "figura.docs.world.is_thundering.desc": "Gets whether or not there is currently thunder/lightning happening in the world.",
  "figura.docs.world.get_light_level.desc": "Gets the overall light level of the block at the given position.",
  "figura.docs.world.get_sky_light_level.desc": "Gets the sky light level of the block at the given position.",
  "figura.docs.world.get_block_light_level.desc": "Gets the block light level of the block at the given position.",
  "figura.docs.world.is_open_sky.desc": "Gets whether or not the sky is open at the given position.",
  "figura.docs.world.exists.desc": "Checks whether or not a world currently exists. This will almost always be true, but might be false on some occasions such as while travelling between dimensions.",

  "figura.docs.blockstate.desc": "A proxy for a block state from Minecraft. Instances are obtained through the WorldAPI.",
  "figura.docs.blockstate.id.desc": "The identifier of the block this BlockState comes from.",
  "figura.docs.blockstate.exists.desc": "Checks whether or not this BlockState exists. I can't think of a situation where it wouldn't exist, but this function is provided for you to check just in case.",
  "figura.docs.blockstate.is_translucent.desc": "Gets whether or not the BlockState, at this position, would propagate sky light downwards.",
  "figura.docs.blockstate.get_opacity.desc": "Gets the opacity of the BlockState, in terms of how much it affects light levels.",
  "figura.docs.blockstate.get_map_color.desc": "Gets the map color of this BlockState, as a Vector3 with R,G,B ranging 0 to 1.",
  "figura.docs.blockstate.is_solid_block.desc": "Gets whether or not the BlockState, at this position, is a solid block.",
  "figura.docs.blockstate.is_full_cube.desc": "Gets whether or not the BlockState, at this position, has a full cube as its collision hitbox.",
  "figura.docs.blockstate.has_emissive_lightning.desc": "Gets whether or not the BlockState, at this position, uses emissive lighting.",
  "figura.docs.blockstate.get_hardness.desc": "Gets the hardness of the BlockState, when placed at this position.",
  "figura.docs.blockstate.get_comparator_output.desc": "Gets the amount of signal strength a comparator would get from this BlockState.",
  "figura.docs.blockstate.has_block_entity.desc": "Gets whether or not this BlockState has an associated block entity.",
  "figura.docs.blockstate.is_opaque.desc": "Gets whether or not this BlockState is opaque.",
  "figura.docs.blockstate.emits_redstone_power.desc": "Gets whether or not this BlockState emits redstone power.",
  "figura.docs.blockstate.get_luminance.desc": "Gets the emission light level of this BlockState.",
  "figura.docs.blockstate.get_slipperiness.desc": "Gets the slipperiness of this BlockState. (Slime blocks and ice in vanilla)",
  "figura.docs.blockstate.get_velocity_multiplier.desc": "Gets the velocity multiplier of this BlockState. (Only Soul sand, honey blocks in vanilla)",
  "figura.docs.blockstate.get_jump_velocity_multiplier.desc": "Gets the jump velocity multiplier of this BlockState. (Literally just honey blocks in vanilla)",
  "figura.docs.blockstate.get_blast_resistance.desc": "Gets the blast resistance of this BlockState.",

  "figura.docs.biome.desc": "A proxy for a Minecraft biome. Instances are obtained through the WorldAPI. (Not implemented yet, currently only has a \"name\" field)",
  "figura.docs.biome.name.desc": "The name of the biome, according to the registry.",

  "figura.docs.model_part.desc": "Represents a node in the model tree, basically a group/cube/mesh in Blockbench. Each bbmodel file is itself a ModelPart, and all of your models are contained in a global ModelPart called \"models\".",
  "figura.docs.model_part.name": "The name of this model part.",
  "figura.docs.model_part.get_parent.desc": "Gets the parent part of this part. If this part has no parent, returns nil.",
  "figura.docs.model_part.get_children.desc": "Gets the children of this part, stored in a table.",
  "figura.docs.model_part.get_pos.desc": "Gets the position of the model part, as an offset from its position in blockbench. Only changes from {0,0,0} when you call setPos().",
  "figura.docs.model_part.set_pos.desc": "Sets the position offset for this part from its blockbench position. Nil values for position are assumed to be 0.",
  "figura.docs.model_part.get_rot.desc": "Gets the rotation of the model part, including its rotation in blockbench. For relative rotation values, check out the \"bonus\" rot functions.",
  "figura.docs.model_part.set_rot.desc": "Sets the absolute rotation for this part. Nil values for rotation are assumed to be 0. Angles are given in degrees. For relative rotation values, check out the \"bonus\" rot functions.",
  "figura.docs.model_part.get_bonus_rot.desc": "Gets the bonus rotation of the model part, offset from its rotation in blockbench. For absolute rotation values, check out the non-bonus rot functions.",
  "figura.docs.model_part.set_bonus_rot.desc": "Sets the bonus rotation for this part. Nil values for rotation are assumed to be 0. Angles are given in degrees. For absolute rotation values, check out the non-bonus rot functions.",
  "figura.docs.model_part.get_scale.desc": "Gets the scale of the model part, as a multiple of its blockbench size. Only changes from {1,1,1} when you call setScale().",
  "figura.docs.model_part.set_scale.desc": "Sets the scale factor for this part. Nil values for scale are assumed to be 1.",
  "figura.docs.model_part.get_pivot.desc": "Gets the pivot point of the model part, including its pivot in blockbench. For relative values, check out the \"bonus\" pivot functions.",
  "figura.docs.model_part.set_pivot.desc": "Sets the absolute pivot for this part. Nil values are assumed to be 0. For relative pivot offsets, check out the \"bonus\" pivot functions.",
  "figura.docs.model_part.get_bonus_pivot.desc": "Gets the bonus pivot of the model part, offset from its pivot in blockbench. For absolute pivot point values, check out the non-bonus pivot functions.",
  "figura.docs.model_part.set_bonus_pivot.desc": "Sets the bonus pivot point for this part. Nil values are assumed to be 0. For absolute pivot point values, check out the non-bonus pivot functions.",
  "figura.docs.model_part.get_position_matrix.desc": "Recalculates the matrix for this model part, based on its current position, rotation, scale, and pivot, then returns this matrix.",
  "figura.docs.model_part.get_position_matrix_raw.desc": "Returns the position matrix for this model part. The Raw version of the function is different in that it doesn't recalculate the matrix before getting it.",
  "figura.docs.model_part.get_normal_matrix.desc": "Recalculates the normal matrix for this model part, based on its current position, rotation, scale, and pivot, then returns this matrix.",
  "figura.docs.model_part.get_normal_matrix_raw.desc": "Returns the normal matrix for this model part. The Raw version of the function is different in that it doesn't recalculate the matrix before returning it.",
  "figura.docs.model_part.set_matrix.desc": "Sets the given matrix as the position matrix for this model part. The normal matrix is automatically calculated as the inverse transpose of this matrix. Calling this DOES NOT CHANGE the values of position, rot, or scale in the model part. If you call setPos() or a similar function, the effects of setMatrix() will be overwritten.",
  "figura.docs.model_part.get_visible.desc": "Gets whether or not this model part is visible. The default value is nil, meaning it copies the visibility of its parent part during rendering.",
  "figura.docs.model_part.set_visible.desc": "Sets this part to be visible or invisible. The default value is nil, meaning the part copies its visibility from its parent part. If you want to set the visibility back to the default value of nil, use resetVisible() instead.",
  "figura.docs.model_part.reset_visible.desc": "Resets the visibility status of the part to default. The default value is nil, meaning the part copies the visibility from its parent part.",
  "figura.docs.model_part.get_primary_render_type.desc": "Gets the current primary render type of this model part. Nil by default, meaning the part copies the primary render type of its parent.",
  "figura.docs.model_part.get_secondary_render_type.desc": "Gets the current secondary render type of this model part. Nil by default, meaning the part copies the secondary render type of its parent.",
  "figura.docs.model_part.set_primary_render_type.desc": "Sets the current primary render type of this model part. Nil by default, meaning the part copies the primary render type of its parent during rendering.",
  "figura.docs.model_part.set_secondary_render_type.desc": "Sets the current secondary render type of this model part. Nil by default, meaning the part copies the secondary render type of its parent during rendering.",

  "figura.docs.vanilla_model.desc": "A global API that provides functions to interact with the vanilla player model and its parts. Accessed using the name \"vanilla_model\".",
  "figura.docs.vanilla_model.head.desc": "The head of the player, not including the hat.",
  "figura.docs.vanilla_model.body.desc": "The body of the player, not including the outer layer.",
  "figura.docs.vanilla_model.left_arm.desc": "The left arm of the player, not including the outer layer.",
  "figura.docs.vanilla_model.right_arm.desc": "The right arm of the player, not including the outer layer.",
  "figura.docs.vanilla_model.left_leg.desc": "The left leg of the player, not including the outer layer.",
  "figura.docs.vanilla_model.right_leg.desc": "The right leg of the player, not including the outer layer.",
  "figura.docs.vanilla_model.hat.desc": "The outer layer of the player's head.",
  "figura.docs.vanilla_model.jacket.desc": "The outer layer of the player's body.",
  "figura.docs.vanilla_model.left_sleeve.desc": "The outer layer of the player's left arm.",
  "figura.docs.vanilla_model.right_sleeve.desc": "The outer layer of the player's right arm.",
  "figura.docs.vanilla_model.left_pants.desc": "The outer layer of the player's left leg.",
  "figura.docs.vanilla_model.right_pants.desc": "The outer layer of the player's right leg.",
  "figura.docs.vanilla_model.all.desc": "Multi-part: The entirety of the vanilla model.",
  "figura.docs.vanilla_model.outer_layer.desc": "Multi-part: The outer layer of the player.",
  "figura.docs.vanilla_model.inner_layer.desc": "Multi-part: The main body of the player, everything except the outer layer.",

  "figura.docs.vanilla_part.desc": "Represents a model part in a vanilla model. Can be set visible and invisible, and queried for rotation and position offsets.",
  "figura.docs.vanilla_part.set_visible.desc": "Sets this part to be visible or invisible.",
  "figura.docs.vanilla_part.get_visible.desc": "Gets whether you have set this part to be visible or invisible. Only responds to your own changes in script, not anything done by Minecraft.",
  "figura.docs.vanilla_part.get_origin_rot.desc": "Gets the rotation to this vanilla model part currently applied by Minecraft.",
  "figura.docs.vanilla_part.get_origin_pos.desc": "Gets the position offset to this vanilla model part currently applied by Minecraft.",

  "figura.docs.entity.desc": "Acts as a proxy for an entity in the Minecraft world.",
  "figura.docs.entity.exists.desc": "Checks whether the proxied entity exists. This returns false if the proxied entity leaves your loaded chunks, dies, or goes away for some other reason.",
  "figura.docs.entity.get_pos.desc": "Gets the position of the proxied entity in the world. If delta is passed in, then it will be used to linearly interpolate the position of the entity between the previous tick and the current tick. The default value of delta is 1.",
  "figura.docs.entity.get_rot.desc": "Gets the rotation of the proxied entity in degrees. If delta is passed in, then it will be used to linearly interpolate the rotation of the entity between the previous tick and the current tick. The default value of delta is 1.",

  "figura.docs.living_entity.desc": "Acts as a proxy for a living entity in the Minecraft world.",
  "figura.docs.living_entity.get_body_yaw.desc": "Gets the yaw of the proxied entity's body in degrees. If delta is passed in, then it will be used to linearly interpolate the rotation of the body between the previous tick and the current tick. The default value of delta is 1.",

  "figura.docs.player.desc": "Acts as a proxy for a player entity in the Minecraft world. A global instance exists for the avatar's user, under the name \"player\".",
  "figura.docs.player.get_food.desc": "Gets the current food level of the player. Range is 0 to 20.",

  "figura.docs.events.desc": "A global API that contains all of the figura Events. Accessed using the name \"events\".",
  "figura.docs.events.tick.desc": "The TICK event is run every in-game tick: 20 times per second.",
  "figura.docs.events.render.desc": "The RENDER event is run every frame, before the avatar is rendered.",
  "figura.docs.events.post_render.desc": "The POST_RENDER event runs every frame, after the avatar is rendered.",

  "figura.docs.event.desc": "A hook for a certain event in Minecraft. You may register functions to one, and those functions will be called when the event occurs.",
  "figura.docs.event.register.desc": "Registers the given function to the given event. When the event occurs, the function will be run. Functions are run in the order they were registered.",

  "figura.docs.vectors.desc": "A global API which provides functions dedicated to creating and otherwise manipulating vectors. Accessed using the name \"vectors\".",
  "figura.docs.vectors.vec.desc": "Creates and returns a vector of the appropriate size to hold the arguments passed in. For example, if you call vec(3, 4, 0, 2), then the function will return a Vector4 containing those values. There is a global alias \"vec\" for this function, meaning the \"vectors.\" can be omitted.",
  "figura.docs.vectors.vec2.desc": "Creates and returns a Vector2 with the given values. Nil values become zero.",
  "figura.docs.vectors.vec3.desc": "Creates and returns a Vector3 with the given values. Nil values become zero.",
  "figura.docs.vectors.vec4.desc": "Creates and returns a Vector4 with the given values. Nil values become zero.",
  "figura.docs.vectors.vec5.desc": "Creates and returns a Vector5 with the given values. Nil values become zero.",
  "figura.docs.vectors.vec6.desc": "Creates and returns a Vector6 with the given values. Nil values become zero.",

  "figura.docs.vector2.desc": "A vector that holds 2 numbers. Can be created using functions in the \"vectors\" api.",
  "figura.docs.vector3.desc": "A vector that holds 3 numbers. Can be created using functions in the \"vectors\" api.",
  "figura.docs.vector4.desc": "A vector that holds 4 numbers. Can be created using functions in the \"vectors\" api.",
  "figura.docs.vector5.desc": "A vector that holds 5 numbers. Can be created using functions in the \"vectors\" api.",
  "figura.docs.vector6.desc": "A vector that holds 6 numbers. Can be created using functions in the \"vectors\" api.",

  "figura.docs.vector_n.x.desc": "The first coordinate of this vector. Can also be gotten with the indices \"r\" and [1].",
  "figura.docs.vector_n.y.desc": "The second coordinate of this vector. Can also be gotten with the indices \"g\" and [2].",
  "figura.docs.vector_n.z.desc": "The third coordinate of this vector. Can also be gotten with the indices \"b\" and [3].",
  "figura.docs.vector_n.w.desc": "The fourth coordinate of this vector. Can also be gotten with the indices \"a\" and [4].",
  "figura.docs.vector_n.t.desc": "The fifth coordinate of this vector. Can also be gotten with the index [5].",
  "figura.docs.vector_n.h.desc": "The sixth coordinate of this vector. Can also be gotten with the index [6].",
  "figura.docs.vector_n.length.desc": "Returns the length of this vector.",
  "figura.docs.vector_n.length_squared.desc": "Returns the length of this vector squared. Suitable when you only care about relative lengths, because it avoids a square root.",
  "figura.docs.vector_n.dot.desc": "Returns the dot product of vec1 and vec2.",

  "figura.docs.vector3.cross.desc": "Returns the cross product of vec1 and vec2.",
  "figura.docs.vector3.augmented.desc": "Returns the augmented form of this vector. The augmented form is Vector4 with a 1 in its W coordinate.",

  "figura.docs.matrices.desc": "A global API which provides functions dedicated to creating and otherwise manipulating matrices. Accessed using the name \"matrices\".",
  "figura.docs.matrices.mat2.desc": "Creates a Matrix2 using the given parameters as columns. If you call the function with no parameters, returns the 2x2 identity matrix.",
  "figura.docs.matrices.mat3.desc": "Creates a Matrix3 using the given parameters as columns. If you call the function with no parameters, returns the 3x3 identity matrix.",
  "figura.docs.matrices.mat4.desc": "Creates a Matrix4 using the given parameters as columns. If you call the function with no parameters, returns the 4x4 identity matrix.",
  "figura.docs.matrices.rotation2.desc": "Creates a new Matrix2 that rotates by the specified angle. Angle is given in degrees.",
  "figura.docs.matrices.rotation3.desc": "Creates a new Matrix3 that rotates by the specified angles. Angles are given in degrees, and the rotation order is ZYX.",
  "figura.docs.matrices.x_rotation3.desc": "Creates a new Matrix3 that rotates by the specified angle around the X axis. Angle is given in degrees.",
  "figura.docs.matrices.y_rotation3.desc": "Creates a new Matrix3 that rotates by the specified angle around the Y axis. Angle is given in degrees.",
  "figura.docs.matrices.z_rotation3.desc": "Creates a new Matrix3 that rotates by the specified angle around the Z axis. Angle is given in degrees.",
  "figura.docs.matrices.rotation4.desc": "Creates a new Matrix4 that rotates by the specified angles. Angles are given in degrees, and the rotation order is ZYX.",
  "figura.docs.matrices.x_rotation4.desc": "Creates a new Matrix4 that rotates by the specified angle around the X axis. Angle is given in degrees.",
  "figura.docs.matrices.y_rotation4.desc": "Creates a new Matrix4 that rotates by the specified angle around the Y axis. Angle is given in degrees.",
  "figura.docs.matrices.z_rotation4.desc": "Creates a new Matrix4 that rotates by the specified angle around the Z axis. Angle is given in degrees.",
  "figura.docs.matrices.scale2.desc": "Creates a new Matrix2 that scales by the specified factors.",
  "figura.docs.matrices.scale3.desc": "Creates a new Matrix3 that scales by the specified factors.",
  "figura.docs.matrices.scale4.desc": "Creates a new Matrix4 that scales by the specified factors.",
  "figura.docs.matrices.translate4.desc": "Creates a new Matrix4 that translates by the specified offset.",

  "figura.docs.matrix2.desc": "A matrix with 2 rows and 2 columns.",
  "figura.docs.matrix3.desc": "A matrix with 3 rows and 3 columns.",
  "figura.docs.matrix4.desc": "A matrix with 4 rows and 4 columns.",

  "figura.docs.matrix_n.vxy.desc": "There is 1 such field for each element of the matrix. You can index these fields with v[x][y], for example \"mat.v12\" will return the value in the first row, second column of \"mat\".",
  "figura.docs.matrix_n.det.desc": "Calculates and returns the determinant of this matrix.",
  "figura.docs.matrix_n.invert.desc": "Inverts this matrix, changing the values inside.",
  "figura.docs.matrix_n.get_inverse.desc": "Calculates and returns the inverse of this matrix.",
  "figura.docs.matrix_n.transpose.desc": "Transposes this matrix, changing the values inside.",
  "figura.docs.matrix_n.get_transpose.desc": "Calculates and returns the transpose of this matrix.",
  "figura.docs.matrix_n.scale.desc": "Scales this matrix by the specified amount, changing the values inside.",

  "figura.docs.matrix2.rotate.desc": "Rotates this matrix by the specified amount, changing the values inside. Angle is given in degrees.",
  "figura.docs.matrix2.get_column.desc": "Gets a Vector2 representing the desired column of the matrix. 1-indexed, so calling mat:getColumn(1) will return the first column of the matrix.",
  "figura.docs.matrix2.get_row.desc": "Gets a Vector2 representing the desired row of the matrix. 1-indexed, so calling mat:getRow(1) will return the first row of the matrix.",

  "figura.docs.matrix3.rotate.desc": "Rotates this matrix by the specified amount, changing the values inside. Angles are given in degrees, and the rotation order is ZYX.",
  "figura.docs.matrix3.get_column.desc": "Gets a Vector3 representing the desired column of the matrix. 1-indexed, so calling mat:getColumn(1) will return the first column of the matrix.",
  "figura.docs.matrix3.get_row.desc": "Gets a Vector3 representing the desired row of the matrix. 1-indexed, so calling mat:getRow(1) will return the first row of the matrix.",

  "figura.docs.matrix4.translate.desc": "Translates this matrix by the specified amount, changing the values inside.",
  "figura.docs.matrix4.rotate.desc": "Rotates this matrix by the specified amount, changing the values inside. Angles are given in degrees, and the rotation order is ZYX.",
  "figura.docs.matrix4.get_column.desc": "Gets a Vector4 representing the desired column of the matrix. 1-indexed, so calling mat:getColumn(1) will return the first column of the matrix.",
  "figura.docs.matrix4.get_row.desc": "Gets a Vector4 representing the desired row of the matrix. 1-indexed, so calling mat:getRow(1) will return the first row of the matrix."
}